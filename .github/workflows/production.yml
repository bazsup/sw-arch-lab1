# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup-web-server:
    if: "contains(github.event.head_commit.message, 'build-server')"
    runs-on: ubuntu-latest

    env:
      RESOURCE_GROUP: group-project1
      DISK_NAME: lab1_DataDisk_0
      VM_SIZE: Standard_B1s
      VM_NAME: lab1
      VM_IMAGE: Canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2:20.04.202101191

    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Clear resource
      run: |
        az vm delete -g $RESOURCE_GROUP -n $VM_NAME -y
        az disk delete --name $DISK_NAME --resource-group $RESOURCE_GROUP -y
    - name: Create disk
      run: |
        az disk create --name $DISK_NAME \
          --resource-group $RESOURCE_GROUP \
          --size-gb 8
    - name: Create VM
      run: |
        echo ${{ secrets.PUBLIC_KEY }} > app.pub
        az vm create --resource-group $RESOURCE_GROUP \
          --name $VM_NAME \
          --image $VM_IMAGE \
          --authentication-type all \
          --admin-username ${{ secrets.AZURE_USER }} \
          --admin-password ${{ secrets.AZURE_PASSWORD }} \
          --attach-data-disks $DISK_NAME \
          --size $VM_SIZE \
          --output none \
          --ssh-key-values app.pub \
          --verbose
    - name: Allow http
      run: |
        az network nsg rule create \
          --resource-group group-project1 \
          --nsg-name lab1NSG \
          --name http \
          --protocol tcp \
          --priority 1010 \
          --destination-port-range 80
    - name: Delete DNS record set
      run: |
        az network dns record-set a delete --name @ \
          --resource-group $RESOURCE_GROUP \
          --zone-name ${{ secrets.HOSTNAME }} -y
    - name: Create a new DNS record
      run: |
        IP=$(az vm show -d -g $RESOURCE_GROUP -n $VM_NAME --query publicIps -o tsv)
        az network dns record-set a create --name @ \
          --resource-group $RESOURCE_GROUP \
          --zone-name ${{ secrets.HOSTNAME }} -o none
        az network dns record-set a add-record --ipv4-address $IP \
          --record-set-name @ \
          --resource-group $RESOURCE_GROUP \
          --zone-name ${{ secrets.HOSTNAME }} \
          --ttl 300 -o none

  provision-web-server:
    if: "contains(github.event.head_commit.message, 'build-server')"
    runs-on: ubuntu-latest
    needs: [setup-web-server]

    steps:
    - name: Provision Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOSTNAME }}
        ususernameer: ${{ secrets.AZURE_USER }}
        key: ${{ secrets.PRIVATE_KEY }}
        run: |
          # Firewall Configuration
          sudo ufw allow ssh
          sudo ufw enable
          
          # Setup Apache Server
          sudo apt update -y
          sudo apt install apache2 -y
          sudo ufw allow 'Apache'
          
          # Reverse proxy to applicatio port
          echo "<VirtualHost *:80>" > host.conf
          echo "  ProxyPreserveHost On" >> host.conf
          echo "  ProxyRequests Off" >> host.conf
          echo "  ServerName ${{ secrets.HOSTNAME }}" >> host.conf
          echo "  ServerAlias ${{ secrets.HOSTNAME }}" >> host.conf
          echo "  ProxyPass / http://localhost:8080/" >> host.conf
          echo "  ProxyPassReverse / http://localhost:8080/" >> host.conf
          echo "</VirtualHost>" >> host.conf
          sudo mv host.conf /etc/apache2/sites-enabled/${{ secrets.HOSTNAME }}.conf

          sudo a2enmod proxy && sudo a2enmod proxy_http
          
          # Reload apache config
          sudo /etc/init.d/apache2 reload

  build:

    needs: [setup-web-server, provision-web-server]
    if: always()
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Copy file
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOSTNAME }}
        username: ${{ secrets.AZURE_USER }}
        password: ${{ secrets.AZURE_PASSWORD }}
        source: "target/simple-web-api-0.0.1-SNAPSHOT.jar"
        target: "simple-web-api.jar"
    - name: Run application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOSTNAME }}
        ususernameer: ${{ secrets.AZURE_USER }}
        key: ${{ secrets.PRIVATE_KEY }}
        run: java -jar simple-web-api.jar &
